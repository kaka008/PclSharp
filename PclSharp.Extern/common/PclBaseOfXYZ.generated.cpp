// Code generated by a template
#pragma once
#include "..\export.h"

#include <pcl/pcl_base.h>
#include <pcl/point_types.h>

using namespace pcl;
using namespace std;

typedef boost::shared_ptr<PointCloud<PointXYZ>> boost_cloud;

#ifdef __cplusplus
extern "C" {
#endif 

EXPORT(void) pclbase_xyz_setInputCloud(PCLBase<PointXYZ>* ptr, PointCloud<PointXYZ>* cloud)
{
	ptr->setInputCloud(boost_cloud(boost_cloud(), cloud));
}

EXPORT(void) pclbase_xyz_setIndices(PCLBase<PointXYZ>* ptr, vector<int>* indices)
{
	ptr->setIndices(boost::shared_ptr<vector<int>>(boost::shared_ptr<vector<int>>(), indices));
}

EXPORT(const PointXYZ*) pclbase_xyz_indexGet(PCLBase<PointXYZ>* ptr, int idx)
{ return &ptr->operator[](idx); }

#ifdef __cplusplus  
}
#endif  
