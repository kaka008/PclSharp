// Code generated by a template
using System;
using System.Collections.Generic;
using System.Numerics;
using System.Runtime.InteropServices;
using PclSharp.Struct;
using PclSharp.Std;
namespace PclSharp
{
	public static partial class Invoke
	{
		[DllImport(Native.DllName, CallingConvention=Native.CallingConvention)]
		public static extern IntPtr polygonmesh_ctor();
		[DllImport(Native.DllName, CallingConvention=Native.CallingConvention)]
		public static extern void polygonmesh_delete(ref IntPtr ptr);

		[DllImport(Native.DllName, CallingConvention=Native.CallingConvention)]
		public static extern void polygonmesh_setHeader(IntPtr ptr, IntPtr value);
		[DllImport(Native.DllName, CallingConvention=Native.CallingConvention)]
		public static extern IntPtr polygonmesh_getHeader(IntPtr ptr);
		[DllImport(Native.DllName, CallingConvention=Native.CallingConvention)]
		public static extern void polygonmesh_setCloud(IntPtr ptr, IntPtr value);
		[DllImport(Native.DllName, CallingConvention=Native.CallingConvention)]
		public static extern IntPtr polygonmesh_getCloud(IntPtr ptr);
		[DllImport(Native.DllName, CallingConvention=Native.CallingConvention)]
		public static extern void polygonmesh_setPolygons(IntPtr ptr, IntPtr value);
		[DllImport(Native.DllName, CallingConvention=Native.CallingConvention)]
		public static extern IntPtr polygonmesh_getPolygons(IntPtr ptr);
	}

	public class PolygonMesh : UnmanagedObject
	{
		public PolygonMesh()
		{
			_ptr = Invoke.polygonmesh_ctor();
		}

		public IntPtr Header
		{
			get { return Invoke.polygonmesh_getHeader(_ptr); }
            set { Invoke.polygonmesh_setHeader(_ptr, value); }
		}

		public IntPtr Cloud
		{
			get { return Invoke.polygonmesh_getCloud(_ptr); }
            set { Invoke.polygonmesh_setCloud(_ptr, value); }
		}

		public IntPtr Polygons
		{
			get { return Invoke.polygonmesh_getPolygons(_ptr); }
            set { Invoke.polygonmesh_setPolygons(_ptr, value); }
		}

		protected override void DisposeObject()
		{
			Invoke.polygonmesh_delete(ref _ptr);
		}
	}
}
