// Code generated by a template
using PclSharp.Common;
using PclSharp.Search;
using PclSharp.Std;
using PclSharp.Struct;

namespace PclSharp.Segmentation
{
	public abstract class LCCPSegmentation<PointT> : UnmanagedObject
	{
		public abstract float ConcavityToleranceThreshold { get; set; }
		public abstract int KFactor { set; }
		public abstract int MinSegmentSize { set; }
		public abstract bool SanityCheck { set; }

		public abstract void SetInputSupervoxels(SupervoxelClusters<PointT> clusters, MultiMap<uint, uint> adjacency);
		public abstract void SetSmoothnessCheck(bool useSmoothness, float voxelRes, float seedRes, float smoothnessThreshold = 0.1f);

		public abstract void Segment();

		public abstract void RelabelCloud(PointCloud<PointXYZL> labeledCloud);

		public abstract void Reset();
	}
}
