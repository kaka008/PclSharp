// Code generated by a template
using PclSharp.Common;
using PclSharp.Search;
using PclSharp.Std;
using PclSharp.Struct;

namespace PclSharp.Segmentation
{
	public abstract class SupervoxelClustering<PointT> : PclBase<PointT>
	{
		public abstract float VoxelResolution { get; set; }
		public abstract float SeedResolution { get; set; }
		public abstract bool UseSingleCameraTransform { set; }
		public abstract float ColorImportance { set; }
        public abstract float NormalImportance { set; }
        public abstract float SpatialImportance { set; }

		public abstract void SetNormalCloud(PointCloud<Normal> cloud);
		public abstract void Extract(SupervoxelClusters<PointT> clusters);

		public abstract void RefineSupervoxels(int iterations, SupervoxelClusters<PointT> clusters);

		public abstract PointCloud<PointXYZL> GetLabeledCloud();
		public abstract void GetSupervoxelAdjacency(MultiMap<uint, uint> adjacency);
	}
}
