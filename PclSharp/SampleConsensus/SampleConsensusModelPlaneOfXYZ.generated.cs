// Code generated by a template
using System;
using System.Collections.Generic;
using System.Numerics;
using System.Runtime.InteropServices;
using PclSharp.Struct;
using PclSharp.Eigen;
using PclSharp.Std;

namespace PclSharp.SampleConsensus
{
	public static partial class Invoke
	{
		[DllImport(Native.DllName, CallingConvention=Native.CallingConvention)]
		public static extern IntPtr sampleconsensusmodel_plane_xyz_ctor_indices(IntPtr cloud, IntPtr indices);
		[DllImport(Native.DllName, CallingConvention=Native.CallingConvention)]
		public static extern void sampleconsensusmodel_plane_xyz_delete(ref IntPtr ptr);

		//methods
		[DllImport(Native.DllName, CallingConvention=Native.CallingConvention)]
		public static extern void sampleconsensusmodel_plane_xyz_setInputCloud(IntPtr ptr, IntPtr cloud);
		[DllImport(Native.DllName, CallingConvention=Native.CallingConvention)]
		public static extern void sampleconsensusmodel_plane_xyz_setIndices(IntPtr ptr, IntPtr indices);
		[DllImport(Native.DllName, CallingConvention=Native.CallingConvention)]
		public static extern void sampleconsensusmodel_plane_xyz_selectWithinDistance(IntPtr ptr, IntPtr modelCoefficients, double distance, IntPtr inliers);
		[DllImport(Native.DllName, CallingConvention=Native.CallingConvention)]
		public static extern void sampleconsensusmodel_plane_xyz_getSamples(IntPtr ptr, int iterations, IntPtr samples);
		[DllImport(Native.DllName, CallingConvention=Native.CallingConvention)]
		public static extern void sampleconsensusmodel_plane_xyz_optimizeModelCoefficients(IntPtr ptr, IntPtr inliers, IntPtr modelCoefficients, IntPtr optimizedCoefficients);
		[DllImport(Native.DllName, CallingConvention=Native.CallingConvention)]
		public static extern bool sampleconsensusmodel_plane_xyz_computeModelCoefficients(IntPtr ptr, IntPtr samples, IntPtr modelCoefficients);
	}

	public class SampleConsensusModelPlaneOfXYZ : SampleConsensusModelPlane<PointXYZ>
	{
		public SampleConsensusModelPlaneOfXYZ(PointCloud<PointXYZ> cloud = null, Std.VectorOfInt indices = null)
		{
			_ptr = Invoke.sampleconsensusmodel_plane_xyz_ctor_indices(cloud, indices);
		}

		public override bool ComputeModelCoefficients(VectorOfInt samples, VectorXf modelCoefficients)
			=> Invoke.sampleconsensusmodel_plane_xyz_computeModelCoefficients(_ptr, samples, modelCoefficients);

        public override void GetSamples(int iterations, VectorOfInt samples)
        {
            Invoke.sampleconsensusmodel_plane_xyz_getSamples(_ptr, iterations, samples.Ptr);
        }

        public override void OptimizeModelCoefficients(VectorOfInt inliers, VectorXf modelCoefficients, VectorXf optimizedCoefficients)
        {
            Invoke.sampleconsensusmodel_plane_xyz_optimizeModelCoefficients(_ptr, inliers.Ptr, modelCoefficients, optimizedCoefficients);
        }

        public override void SetIndices(VectorOfInt indices)
        {
            Invoke.sampleconsensusmodel_plane_xyz_setIndices(_ptr, indices);
        }

        public override void SetInputCloud(PointCloud<PointXYZ> cloud)
        {
            Invoke.sampleconsensusmodel_plane_xyz_setInputCloud(_ptr, cloud);
        }

		public override void SelectWithinDistance(VectorXf modelCoefficients, double distance, Std.VectorOfInt inliers)
		{
			Invoke.sampleconsensusmodel_plane_xyz_selectWithinDistance(_ptr, modelCoefficients, distance, inliers);
		}

		protected override void DisposeObject()
		{
			Invoke.sampleconsensusmodel_plane_xyz_delete(ref _ptr);
		}
	}
}
