<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#@include file="Manager.ttinclude"#>
<#@include file="InvokeTemplate.ttinclude"#>
<# 
	var ClassName = "PolygonMesh";
	var classname = ClassName.ToLower();
	var classFunc = "polygonmesh";
	var cppWrapper = "PolygonMesh";

	var i = new InvokeT(classFunc, "PolygonMesh", cppWrapper);
#>
// Code generated by a template
using System;
using System.Collections.Generic;
using System.Numerics;
using System.Runtime.InteropServices;
using PclSharp.Struct;
using PclSharp.Std;
namespace PclSharp
{
	public static partial class Invoke
	{
		<#= i.Ctor() #>
		<#= i.Delete() #>

		<#=i.Prop("Header", "IntPtr")#>
		<#=i.Prop("Cloud", "IntPtr")#>
		<#=i.Prop("Polygons", "IntPtr")#>
	}

	public class PolygonMesh : UnmanagedObject
	{
		public PolygonMesh()
		{
			_ptr = <#=i.Invoke("ctor")#>;
		}

		public IntPtr Header
		{
			<#=i.InvokeP("Header", "IntPtr")#>
		}

		public IntPtr Cloud
		{
			<#=i.InvokeP("Cloud", "IntPtr")#>
		}

		public IntPtr Polygons
		{
			<#=i.InvokeP("Polygons", "IntPtr")#>
		}

		protected override void DisposeObject()
		{
			<#=i.DeleteI()#>;
		}
	}
}
<#
	var manager = Manager.Create(Host, GenerationEnvironment);
	manager.StartNewFile("..\\PclSharp.Extern\\pointcloud\\PolygonMesh.generated.cpp");
#>
// Code generated by a template
#pragma once
#include "..\export.h"
#include <pcl/PolygonMesh.h>

using namespace pcl;
using namespace std;

#ifdef __cplusplus
extern "C" {
#endif

<#=i.Export("PolygonMesh*", "ctor", "")#>
{
	return new PolygonMesh();
}

<#=i.Export("void", "delete", "PolygonMesh** ptr")#>
{
	delete *ptr;
	*ptr = NULL;
}

<#=i.ExportI("PCLHeader*", "getHeader", "")#>
{ return &ptr->header; }
<#=i.ExportI("void", "setHeader", "PCLHeader* value")#>
{ ptr->header = *value; }

<#=i.ExportI("PCLPointCloud2*", "getCloud", "")#>
{ return &ptr->cloud; }
<#=i.ExportI("void", "setCloud", "PCLPointCloud2* value")#>
{ ptr->cloud = *value; }

<#=i.ExportI("std::vector<pcl::Vertices>*", "getPolygons", "")#>
{ return &ptr->polygons; }
<#=i.ExportI("void", "setPolygons", "std::vector<pcl::Vertices>* value")#>
{ ptr->polygons = *value; }

#ifdef __cplusplus  
}
#endif
<# i.Dispose(); manager.EndBlock(false); manager.Process(true); #>